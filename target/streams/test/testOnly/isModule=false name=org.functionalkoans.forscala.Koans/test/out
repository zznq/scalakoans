[0m[[0minfo[0m] [0m[32mKoans:[0m[0m
[0m[[0minfo[0m] [0m[32mAboutAsserts:[0m[0m
[0m[[0minfo[0m] [0m[32m- asserts can take a boolean argument[0m[0m
[0m[[0minfo[0m] [0m[32m- asserts can include a message[0m[0m
[0m[[0minfo[0m] [0m[32m- true and false values can be compared with should matchers[0m[0m
[0m[[0minfo[0m] [0m[32m- booleans in asserts can test equality[0m[0m
[0m[[0minfo[0m] [0m[32m- sometimes we expect you to fill in the values[0m[0m
[0m[[0minfo[0m] [0m[32mAboutValAndVar:[0m[0m
[0m[[0minfo[0m] [0m[32m- vars may be reassigned[0m[0m
[0m[[0minfo[0m] [0m[32m- vals may not be reassigned[0m[0m
[0m[[0minfo[0m] [0m[32mAboutClasses:[0m[0m
[0m[[0minfo[0m] [0m[32m- val parameters in class definition define getter[0m[0m
[0m[[0minfo[0m] [0m[32m- var parameters in class definition define getter and setter[0m[0m
[0m[[0minfo[0m] [0m[32m- fields defined internally are private to class[0m[0m
[0m[[0minfo[0m] [0m[32mAboutOptions:[0m[0m
[0m[[0minfo[0m] [0m[32m- Option can have one of two values - Some or None[0m[0m
[0m[[0minfo[0m] [0m[32m- Represent null with None because null is a bad idea[0m[0m
[0m[[0minfo[0m] [0m[32m- Provide a default value for None[0m[0m
[0m[[0minfo[0m] [0m[32m- checking whether option has value[0m[0m
[0m[[0minfo[0m] [0m[32m- Option can also be used with pattern matching[0m[0m
[0m[[0minfo[0m] [0m[32mAboutObjects:[0m[0m
[0m[[0minfo[0m] [0m[32m- An object is a singleton. One object -- that's it. This object is a replacement of static in Java,[0m[0m
[0m[[0minfo[0m] [0m[32m and is called upon much in the same way[0m[0m
[0m[[0minfo[0m] [0m[32m- Here is proof an object is a singleton, and not a static method in a class[0m[0m
[0m[[0minfo[0m] [0m[32m- An object that has the same name as class is called a companion object,[0m[0m
[0m[[0minfo[0m] [0m[32m it is used to contain factories for the class that it complements[0m[0m
[0m[[0minfo[0m] [0m[32m- A companion object stores shared variables and values for every instantiated class to share.[0m[0m
[0m[[0minfo[0m] [0m[32m (See SecretAgent class and companion object above).[0m[0m
[0m[[0minfo[0m] [0m[32m- A companion object can also see private values and variables of the instantiated objects[0m[0m
[0m[[0minfo[0m] [0m[32mAboutTuples:[0m[0m
[0m[[0minfo[0m] [0m[32m- Tuples can be created easily[0m[0m
[0m[[0minfo[0m] [0m[32m- Tuple items may be accessed individually[0m[0m
[0m[[0minfo[0m] [0m[32m- Tuples may be of mixed type[0m[0m
[0m[[0minfo[0m] [0m[32m- Tuples items can be swapped on a Tuple 2[0m[0m
[0m[[0minfo[0m] [0m[32mAboutHigherOrderFunctions:[0m[0m
[0m[[0minfo[0m] [0m[32m- Meet lambda. Anonymous function[0m[0m
[0m[[0minfo[0m] [0m[32m- An anonymous function can also take on a different look by taking out the brackets[0m[0m
[0m[[0minfo[0m] [0m[32m- Meet closure. Closure is any function that closes over the environment[0m[0m
[0m[[0minfo[0m] [0m[32m- We can take that closure and throw into a method and it will still hold the environment[0m[0m
[0m[[0minfo[0m] [0m[32m- function returning another function[0m[0m
[0m[[0minfo[0m] [0m[32m- function returning another function using an anonymous function[0m[0m
[0m[[0minfo[0m] [0m[32m- isInstanceOf is the same as instanceof in java, but in this case the parameter types can be[0m[0m
[0m[[0minfo[0m] [0m[32m 'blanked out' using existential types with is a single underline, since parameter type are unknown[0m[0m
[0m[[0minfo[0m] [0m[32m at runtime.[0m[0m
[0m[[0minfo[0m] [0m[32m- function taking another function as parameter. Helps in composing functions.[0m[0m
[0m[[0minfo[0m] [0m[32m Hint: a map method applies the function to each element of a list[0m[0m
[0m[[0minfo[0m] [0m[32m- Currying is a technique to transform function with multiple parameters to function with one parameter[0m[0m
[0m[[0minfo[0m] [0m[32m- Currying allows you to create specialized version of generalized function[0m[0m
[0m[[0minfo[0m] [0m[32mAboutLists:[0m[0m
[0m[[0minfo[0m] [0m[32m- Eq tests identity (same object)[0m[0m
[0m[[0minfo[0m] [0m[32m- == tests equality (same content)[0m[0m
[0m[[0minfo[0m] [0m[32m- Nil lists are identical, even of different types[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists are easily created[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists can be accessed via head and tail[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists can accessed by position[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists are immutable[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists have many useful methods[0m[0m
[0m[[0minfo[0m] [0m[32m- Functions over lists can use _ as shorthand[0m[0m
[0m[[0minfo[0m] [0m[32m- Functions over lists can use () instead of {}[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists can be 'reduced' with a mathematical operation[0m[0m
[0m[[0minfo[0m] [0m[32m- Foldleft is like reduce, but with an explicit starting value[0m[0m
[0m[[0minfo[0m] [0m[32m- You can create a list from a range[0m[0m
[0m[[0minfo[0m] [0m[32m- Lists reuse their tails[0m[0m
[0m[[0minfo[0m] [0m[32mAboutMaps:[0m[0m
[0m[[0minfo[0m] [0m[32m- Maps can be created easily[0m[0m
[0m[[0minfo[0m] [0m[32m- Maps contain distinct pairings[0m[0m
[0m[[0minfo[0m] [0m[32m- Maps can be added to easily[0m[0m
[0m[[0minfo[0m] [0m[32m- Map values can be iterated[0m[0m
[0m[[0minfo[0m] [0m[32m- Maps insertion with duplicate key updates previous entry with subsequent value[0m[0m
[0m[[0minfo[0m] [0m[32m- Map keys may be of mixed type[0m[0m
[0m[[0minfo[0m] [0m[32m- Mixed type values can be added to a map [0m[0m
[0m[[0minfo[0m] [0m[32m- Maps may be accessed[0m[0m
[0m[[0minfo[0m] [0m[32m- Map elements can be removed easily[0m[0m
[0m[[0minfo[0m] [0m[32m- Accessing a map by key results in an exception if key is not found[0m[0m
[0m[[0minfo[0m] [0m[32m- Map elements can be removed in multiple[0m[0m
[0m[[0minfo[0m] [0m[32m- Map elements can be removed with a tuple[0m[0m
[0m[[0minfo[0m] [0m[33m  + ***************************************** [0m[0m
[0m[[0minfo[0m] [0m[33m  + ***************************************** [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  + Please meditate on koan "Attempted removal of nonexistent elements from a map is handled gracefully" of suite "AboutMaps" [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  +  [0m[0m
[0m[[0minfo[0m] [0m[33m  + ***************************************** [0m[0m
[0m[[0minfo[0m] [0m[33m  + ***************************************** [0m[0m
[0m[[0minfo[0m] [0m[32mInfo Provided - AboutMaps[0m[0m
[0m[[0minfo[0m] [0m[32mInfo Provided - Koans[0m[0m
